/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@-app-icon1-name: 'App-Icon1';
@-app-icon1-x: 142px;
@-app-icon1-y: 0px;
@-app-icon1-offset-x: -142px;
@-app-icon1-offset-y: 0px;
@-app-icon1-width: 90px;
@-app-icon1-height: 90px;
@-app-icon1-total-width: 266px;
@-app-icon1-total-height: 212px;
@-app-icon1-image: '../img/sprites/sprite.png';
@-app-icon1: 142px 0px -142px 0px 90px 90px 266px 212px '../img/sprites/sprite.png' 'App-Icon1';
@-clock-icon-name: 'Clock-Icon';
@-clock-icon-x: 242px;
@-clock-icon-y: 0px;
@-clock-icon-offset-x: -242px;
@-clock-icon-offset-y: 0px;
@-clock-icon-width: 24px;
@-clock-icon-height: 24px;
@-clock-icon-total-width: 266px;
@-clock-icon-total-height: 212px;
@-clock-icon-image: '../img/sprites/sprite.png';
@-clock-icon: 242px 0px -242px 0px 24px 24px 266px 212px '../img/sprites/sprite.png' 'Clock-Icon';
@-icon1-name: 'Icon1';
@-icon1-x: 0px;
@-icon1-y: 142px;
@-icon1-offset-x: 0px;
@-icon1-offset-y: -142px;
@-icon1-width: 70px;
@-icon1-height: 70px;
@-icon1-total-width: 266px;
@-icon1-total-height: 212px;
@-icon1-image: '../img/sprites/sprite.png';
@-icon1: 0px 142px 0px -142px 70px 70px 266px 212px '../img/sprites/sprite.png' 'Icon1';
@-icon2-name: 'Icon2';
@-icon2-x: 80px;
@-icon2-y: 142px;
@-icon2-offset-x: -80px;
@-icon2-offset-y: -142px;
@-icon2-width: 70px;
@-icon2-height: 70px;
@-icon2-total-width: 266px;
@-icon2-total-height: 212px;
@-icon2-image: '../img/sprites/sprite.png';
@-icon2: 80px 142px -80px -142px 70px 70px 266px 212px '../img/sprites/sprite.png' 'Icon2';
@-icon3-name: 'Icon3';
@-icon3-x: 160px;
@-icon3-y: 142px;
@-icon3-offset-x: -160px;
@-icon3-offset-y: -142px;
@-icon3-width: 70px;
@-icon3-height: 70px;
@-icon3-total-width: 266px;
@-icon3-total-height: 212px;
@-icon3-image: '../img/sprites/sprite.png';
@-icon3: 160px 142px -160px -142px 70px 70px 266px 212px '../img/sprites/sprite.png' 'Icon3';
@-inbox-icon-name: 'Inbox-Icon';
@-inbox-icon-x: 242px;
@-inbox-icon-y: 68px;
@-inbox-icon-offset-x: -242px;
@-inbox-icon-offset-y: -68px;
@-inbox-icon-width: 24px;
@-inbox-icon-height: 21px;
@-inbox-icon-total-width: 266px;
@-inbox-icon-total-height: 212px;
@-inbox-icon-image: '../img/sprites/sprite.png';
@-inbox-icon: 242px 68px -242px -68px 24px 21px 266px 212px '../img/sprites/sprite.png' 'Inbox-Icon';
@-play-button-name: 'Play-Button';
@-play-button-x: 0px;
@-play-button-y: 0px;
@-play-button-offset-x: 0px;
@-play-button-offset-y: 0px;
@-play-button-width: 132px;
@-play-button-height: 132px;
@-play-button-total-width: 266px;
@-play-button-total-height: 212px;
@-play-button-image: '../img/sprites/sprite.png';
@-play-button: 0px 0px 0px 0px 132px 132px 266px 212px '../img/sprites/sprite.png' 'Play-Button';
@-reload-icon1-name: 'Reload-Icon1';
@-reload-icon1-x: 242px;
@-reload-icon1-y: 34px;
@-reload-icon1-offset-x: -242px;
@-reload-icon1-offset-y: -34px;
@-reload-icon1-width: 24px;
@-reload-icon1-height: 24px;
@-reload-icon1-total-width: 266px;
@-reload-icon1-total-height: 212px;
@-reload-icon1-image: '../img/sprites/sprite.png';
@-reload-icon1: 242px 34px -242px -34px 24px 24px 266px 212px '../img/sprites/sprite.png' 'Reload-Icon1';
@-stars-name: 'Stars';
@-stars-x: 142px;
@-stars-y: 100px;
@-stars-offset-x: -142px;
@-stars-offset-y: -100px;
@-stars-width: 88px;
@-stars-height: 15px;
@-stars-total-width: 266px;
@-stars-total-height: 212px;
@-stars-image: '../img/sprites/sprite.png';
@-stars: 142px 100px -142px -100px 88px 15px 266px 212px '../img/sprites/sprite.png' 'Stars';
@spritesheet-width: 266px;
@spritesheet-height: 212px;
@spritesheet-image: '../img/sprites/sprite.png';
@spritesheet-sprites: @-app-icon1 @-clock-icon @-icon1 @-icon2 @-icon3 @-inbox-icon @-play-button @-reload-icon1 @-stars;
@spritesheet: 266px 212px '../img/sprites/sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  @sprite-image-bare: ~`"@{sprite-image}".slice(1, -1)`;
  background-image: url(@sprite-image-bare);
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
